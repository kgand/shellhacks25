[1mdiff --git a/Makefile b/Makefile[m
[1mdeleted file mode 100644[m
[1mindex 86ab6d2..0000000[m
[1m--- a/Makefile[m
[1m+++ /dev/null[m
[36m@@ -1,150 +0,0 @@[m
[31m-# Makefile for Messenger AI Assistant[m
[31m-[m
[31m-.PHONY: help dev chrome-build install clean test test-system start lint format[m
[31m-[m
[31m-# Default target[m
[31m-help:[m
[31m-	@echo "Messenger AI Assistant - Available Commands:"[m
[31m-	@echo ""[m
[31m-	@echo "  make dev          - Start development server"[m
[31m-	@echo "  make chrome-build - Build Chrome extension"[m
[31m-	@echo "  make install      - Install all dependencies"[m
[31m-	@echo "  make clean        - Clean build artifacts"[m
[31m-	@echo "  make test         - Run tests"[m
[31m-	@echo "  make test-system  - Test entire system"[m
[31m-	@echo "  make start        - Start system with helper script"[m
[31m-	@echo "  make lint         - Run linters"[m
[31m-	@echo "  make format       - Format code"[m
[31m-	@echo ""[m
[31m-[m
[31m-# Development server[m
[31m-dev:[m
[31m-	@echo "🚀 Starting development server..."[m
[31m-	cd assist/server && uvicorn app_simple:app --host 0.0.0.0 --port 8000 --reload[m
[31m-[m
[31m-# Build Chrome extension[m
[31m-chrome-build:[m
[31m-	@echo "🔨 Building Chrome extension..."[m
[31m-	cd assist/chrome-ext && npm install && npm run build[m
[31m-[m
[31m-# Install all dependencies[m
[31m-install:[m
[31m-	@echo "📦 Installing dependencies..."[m
[31m-	cd assist/server && pip install -r requirements_simple.txt[m
[31m-	cd assist/chrome-ext && npm install[m
[31m-[m
[31m-# Simple setup[m
[31m-setup-simple:[m
[31m-	@echo "🚀 Setting up system (simplified mode)..."[m
[31m-	python assist/scripts/setup-simple.py[m
[31m-[m
[31m-# Clean build artifacts[m
[31m-clean:[m
[31m-	@echo "🧹 Cleaning build artifacts..."[m
[31m-	rm -rf assist/chrome-ext/dist[m
[31m-	rm -rf assist/chrome-ext/node_modules[m
[31m-	rm -rf __pycache__[m
[31m-	rm -rf .pytest_cache[m
[31m-	rm -rf logs/*.log[m
[31m-[m
[31m-# Run tests[m
[31m-test:[m
[31m-	@echo "🧪 Running tests..."[m
[31m-	cd assist/server && python -m pytest tests/ -v[m
[31m-[m
[31m-# Test entire system[m
[31m-test-system:[m
[31m-	@echo "🧪 Testing entire system..."[m
[31m-	python assist/scripts/test-system.py[m
[31m-[m
[31m-# Start system with helper[m
[31m-start:[m
[31m-	@echo "🚀 Starting system..."[m
[31m-	python assist/scripts/start-system.py[m
[31m-[m
[31m-# Run linters[m
[31m-lint:[m
[31m-	@echo "🔍 Running linters..."[m
[31m-	cd assist/server && python -m flake8 . --max-line-length=100[m
[31m-	cd assist/chrome-ext && npm run lint[m
[31m-[m
[31m-# Format code[m
[31m-format:[m
[31m-	@echo "✨ Formatting code..."[m
[31m-	cd assist/server && python -m black . --line-length=100[m
[31m-	cd assist/chrome-ext && npm run format[m
[31m-[m
[31m-# Setup development environment[m
[31m-setup:[m
[31m-	@echo "🔧 Setting up development environment..."[m
[31m-	@if [ -f "assist/infra/setup.sh" ]; then \[m
[31m-		chmod +x assist/infra/setup.sh && \[m
[31m-		./assist/infra/setup.sh; \[m
[31m-	elif [ -f "assist/infra/setup.ps1" ]; then \[m
[31m-		powershell -ExecutionPolicy Bypass -File assist/infra/setup.ps1; \[m
[31m-	else \[m
[31m-		echo "❌ Setup script not found"; \[m
[31m-	fi[m
[31m-[m
[31m-# Production build[m
[31m-build: chrome-build[m
[31m-	@echo "🏗️  Building for production..."[m
[31m-	cd assist/server && pip install -r requirements.txt[m
[31m-[m
[31m-# Docker build[m
[31m-docker-build:[m
[31m-	@echo "🐳 Building Docker image..."[m
[31m-	docker build -t messenger-ai-assistant .[m
[31m-[m
[31m-# Docker run[m
[31m-docker-run:[m
[31m-	@echo "🐳 Running Docker container..."[m
[31m-	docker run -p 8000:8000 -p 8765:8765 messenger-ai-assistant[m
[31m-[m
[31m-# Check system requirements[m
[31m-check:[m
[31m-	@echo "🔍 Checking system requirements..."[m
[31m-	@echo "Node.js version: $$(node --version 2>/dev/null || echo 'Not installed')"[m
[31m-	@echo "Python version: $$(python3 --version 2>/dev/null || echo 'Not installed')"[m
[31m-	@echo "Google Cloud CLI: $$(gcloud --version 2>/dev/null | head -1 || echo 'Not installed')"[m
[31m-[m
[31m-# Generate documentation[m
[31m-docs:[m
[31m-	@echo "📚 Generating documentation..."[m
[31m-	cd assist/server && python -m pydoc -w app[m
[31m-	cd assist/server && python -m pydoc -w gemini_live[m
[31m-	cd assist/server && python -m pydoc -w revive_api[m
[31m-[m
[31m-# Backup data[m
[31m-backup:[m
[31m-	@echo "💾 Backing up data..."[m
[31m-	mkdir -p backups[m
[31m-	tar -czf backups/backup-$$(date +%Y%m%d-%H%M%S).tar.gz data/ logs/[m
[31m-[m
[31m-# Restore data[m
[31m-restore:[m
[31m-	@echo "📥 Restoring data..."[m
[31m-	@if [ -z "$(BACKUP_FILE)" ]; then \[m
[31m-		echo "❌ Please specify BACKUP_FILE=path/to/backup.tar.gz"; \[m
[31m-		exit 1; \[m
[31m-	fi[m
[31m-	tar -xzf $(BACKUP_FILE) -C .[m
[31m-[m
[31m-# Monitor logs[m
[31m-logs:[m
[31m-	@echo "📊 Monitoring logs..."[m
[31m-	tail -f logs/*.log[m
[31m-[m
[31m-# Health check[m
[31m-health:[m
[31m-	@echo "🏥 Checking system health..."[m
[31m-	curl -f http://localhost:8000/health || echo "❌ Server not responding"[m
[31m-[m
[31m-# Deploy to production[m
[31m-deploy:[m
[31m-	@echo "🚀 Deploying to production..."[m
[31m-	@echo "⚠️  This is a placeholder - implement your deployment strategy"[m
[31m-	@echo "Consider using:"[m
[31m-	@echo "  - Google Cloud Run for the backend"[m
[31m-	@echo "  - Chrome Web Store for the extension"[m
[31m-	@echo "  - Cloud Firestore for data storage"[m
[1mdiff --git a/assist/.env.example b/assist/.env.example[m
[1mdeleted file mode 100644[m
[1mindex e69de29..0000000[m
[1mdiff --git a/assist/chrome-ext/package-lock.json b/assist/chrome-ext/package-lock.json[m
[1mdeleted file mode 100644[m
[1mindex d20e6d1..0000000[m
[1m--- a/assist/chrome-ext/package-lock.json[m
[1m+++ /dev/null[m
[36m@@ -1,2611 +0,0 @@[m
[31m-{[m
[31m-  "name": "messenger-ai-assistant",[m
[31m-  "version": "1.0.0",[m
[31m-  "lockfileVersion": 3,[m
[31m-  "requires": true,[m
[31m-  "packages": {[m
[31m-    "": {[m
[31m-      "name": "messenger-ai-assistant",[m
[31m-      "version": "1.0.0",[m
[31m-      "dependencies": {[m
[31m-        "daisyui": "^4.4.19"[m
[31m-      },[m
[31m-      "devDependencies": {[m
[31m-        "@types/chrome": "^0.0.254",[m
[31m-        "autoprefixer": "^10.4.16",[m
[31m-        "postcss": "^8.4.31",[m
[31m-        "tailwindcss": "^3.3.0",[m
[31m-        "typescript": "^5.2.2",[m
[31m-        "vite": "^5.0.0"[m
[31m-      }[m
[31m-    },[m
[31m-    "node_modules/@alloc/quick-lru": {[m
[31m-      "version": "5.2.0",[m
[31m-      "resolved": "https://registry.npmjs.org/@alloc/quick-lru/-/quick-lru-5.2.0.tgz",[m
[31m-      "integrity": "sha512-UrcABB+4bUrFABwbluTIBErXwvbsU/V7TZWfmbgJfbkwiBuziS9gxdODUyuiecfdGQ85jglMW6juS3+z5TsKLw==",[m
[31m-      "dev": true,[m
[31m-      "license": "MIT",[m
[31m-      "engines": {[m
[31m-        "node": ">=10"[m
[31m-      },[m
[31m-      "funding": {[m
[31m-        "url": "https://github.com/sponsors/sindresorhus"[m
[31m-      }[m
[31m-    },[m
[31m-    "node_modules/@esbuild/aix-ppc64": {[m
[31m-      "version": "0.21.5",[m
[31m-      "resolved": "https://registry.npmjs.org/@esbuild/aix-ppc64/-/aix-ppc64-0.21.5.tgz",[m
[31m-      "integrity": "sha512-1SDgH6ZSPTlggy1yI6+Dbkiz8xzpHJEVAlF/AM1tHPLsf5STom9rwtjE4hKAF20FfXXNTFqEYXyJNWh1GiZedQ==",[m
[31m-      "cpu": [[m
[31m-        "ppc64"[m
[31m-      ],[m
[31m-      "dev": true,[m
[31m-      "license": "MIT",[m
[31m-      "optional": true,[m
[31m-      "os": [[m
[31m-        "aix"[m
[31m-      ],[m
[31m-      "engines": {[m
[31m-        "node": ">=12"[m
[31m-      }[m
[31m-    },[m
[31m-    "node_modules/@esbuild/android-arm": {[m
[31m-      "version": "0.21.5",[m
[31m-      "resolved": "https://registry.npmjs.or